lexer grammar SpectraInLexer;

options {
	caseInsensitive = true;
}

// SPECIAL CHARACTERS
Dollar: '$';

ATSIGN: '@';

// braces
OPEN_PAREN: '(';
CLOSE_PAREN: ')';
OPEN_BRACKET: '[';
CLOSE_BRACKET: ']';
OPEN_CURLY: '{';
CLOSE_CURLY: '}';

EQUALS: '=';

COMMA: ',';

// numerical operators
PLUS: '+';
MINUS: '-';
STAR: '*';
SLASH: '/';
CARET: '^';

// boolean operators
LESS_THAN: '<';
GREATER_THAN: '>';
LESS_EQUALS: '<=';
GREATER_EQUALS: '>=';
NOT_EQUALS: '!=';

// reserved statement names and abbrevs

StatementChars: [A-Z0-9_]+;
BIAS: 'BIAS';
BIAS_ALIAS: BIAS;
CONSTANT: 'CONSTANT';
CONSTANT_ALIAS: 'CONS';
CONVERGENCE: 'CONVERGENCE';
CONVERGENCE_ALIAS: 'CONV';
DEFINE: 'DEFINE';
DEFINE_ALIAS: DEFINE;
DEPOSIT: 'DEPOSIT';
DEPOSIT_ALIAS: 'DEPO';
DOPE: 'DOPE';
DOPE_ALIAS: DOPE;
ELECTRODE: 'ELECTRODE';
ELECTRODE_ALIAS: 'ELEC';
END: 'END';
END_ALIAS: END;
EXTRACT: 'EXTRACT';
EXTRACT_ALIAS: 'EXTR';
GRID: 'GRID';
GRID_ALIAS: GRID;
IF: 'IF';
IF_ALIAS: IF;
ELSE: 'ELSE';
ELSE_ALIAS: ELSE;
ENDIF: 'ENDIF';
ENDIF_ALIAS: ENDIF;
INSERT: 'INSERT';
INSERT_ALIAS: INSERT;
INTERFACE: 'INTERFACE';
INTERFACE_ALIAS: 'INT';
LIGHT: 'LIGHT';
LIGHT_ALIAS: LIGHT;
MODEL: 'MODEL';
MODEL_ALIAS: MODEL;
NFERMI: 'NFERMI';
NFERMI_ALIAS: 'NFER';
PFERMI: 'PFERMI';
PFERMI_ALIAS: 'PFER';
REGION: 'REGION';
REGION_ALIAS: 'REGI';
RESTART: 'RESTART';
RESTART_ALIAS: 'REST';
SAVE: 'SAVE';
SAVE_ALIAS: SAVE;
STRUCTURE: 'STRUCTURE';
STRUCTURE_ALIAS: 'STRUCT';
SUBSTRATE: 'SUBSTRATE';
SUBSTRATE_ALIAS: 'SUBS';
TITLE: 'TITLE';
TITLE_ALIAS: TITLE;

// reserved parameter names and abbreviations
ParamChars: [A-Z0-9_]+;
ENAME: 'ENAME';
ENAME_ALIAS: 'ENAM';
VSTEP: 'VSTEP';
VSTEP_ALIAS: 'VS';
NSTEP: 'NSTEP';
NSTEP_ALIAS: 'NS';
ERROR: 'ERROR';
ERROR_ALIAS: 'ER';
NFNAME: 'NFNAME';
NFNAME_ALIAS: 'NFNA';
PFNAME: 'PFNAME';
PFNAME_ALIAS: 'PFNA';
FLOAT: 'FLOAT';
FLOAT_ALIAS: 'FLOA';
BMODEL: 'BMODEL';
BMODEL_ALIAS: 'BMOD';
TEMPERATURE: 'TEMPERATURE';
TEMPERATURE_ALIAS: 'TEMP';
EOX: 'EOX';
EOX_ALIAS: EOX;
ESI: 'ESI';
ESI_ALIAS: ESI;
ENI: 'ENI';
ENI_ALIAS: ENI;
EIN: 'EIN';
EIN_ALIAS: EIN;
EME: 'EME';
EME_ALIAS: EME;
EAL: 'EAL';
EAL_ALIAS: EAL;
EPS: 'EPS';
EPS_ALIAS: EPS;
EM1: 'EM1';
EM1_ALIAS: EM1;
EM2: 'EM2';
EM2_ALIAS: EM2;
EM3: 'EM3';
EM3_ALIAS: EM3;
EM4: 'EM4';
EM4_ALIAS: EM4;
EM5: 'EM5';
EM5_ALIAS: EM5;
EM6: 'EM6';
EM6_ALIAS: EM6;
EM7: 'EM7';
EM7_ALIAS: EM7;
EM8: 'EM8';
EM8_ALIAS: EM8;
EMOB: 'EMOB';
EMOB_ALIAS: EMOB;
HMOB: 'HMOB';
HMOB_ALIAS: HMOB;
NI: 'NI';
NI_ALIAS: NI;
CN: 'CN';
CN_ALIAS: CN;
CP: 'CP';
CP_ALIAS: CP;
TN0: 'TN0';
TN0_ALIAS: TN0;
TP0: 'TP0';
TP0_ALIAS: TP0;
VBG: 'VBG';
VBG_ALIAS: VBG;
CBG: 'CBG';
CBG_ALIAS: CBG;
CSRH: 'CSRH';
CSRH_ALIAS: 'CSR';
AN: 'AN';
AN_ALIAS: AN;
AP: 'AP';
AP_ALIAS: AP;
BN: 'BN';
BN_ALIAS: BN;
BP: 'BP';
BP_ALIAS: BP;
XREF: 'XREF';
XREF_ALIAS: XREF;
ESREF: 'ESREF';
ESREF_ALIAS: ESREF;
HSREF: 'HSREF';
HSREF_ALIAS: HSREF;
SREFN: 'SREFN';
SREFN_ALIAS: SREFN;
SREFP: 'SREFP';
SREFP_ALIAS: SREFP;
ALPHAN: 'ALPHAN';
ALPHAN_ALIAS: ALPHAN;
ALPHAP: 'ALPHAP';
ALPHAP_ALIAS: ALPHAP;
BETAN: 'BETAN';
BETAN_ALIAS: BETAN;
BETAP: 'BETAP';
BETAP_ALIAS: BETAP;
FACTN: 'FACTN';
FACTN_ALIAS: FACTN;
FACTP: 'FACTP';
FACTP_ALIAS: FACTP;
CREFN: 'CREFN';
CREFN_ALIAS: CREFN;
CREFP: 'CREFP';
CREFP_ALIAS: CREFP;
VCN: 'VCN';
VCN_ALIAS: VCN;
VCP: 'VCP';
VCP_ALIAS: VCP;
VSN: 'VSN';
VSN_ALIAS: VSN;
VSP: 'VSP';
VSP_ALIAS: VSP;
EMMIN: 'EMMIN';
EMMIN_ALIAS: 'EMM';
HMMIN: 'HMMIN';
HMMIN_ALIAS: 'HMM';
NSI: 'NSI';
NSI_ALIAS: NSI;
ASI: 'ASI';
ASI_ALIAS: ASI;
ASG: 'ASG';
ASG_ALIAS: ASG;
AGE: 'AGE';
AGE_ALIAS: AGE;
EGGE: 'EGGE';
EGGE_ALIAS: EGGE;
QE: 'QE';
QE_ALIAS: QE;
CTRAP: 'CTRAP';
CTRAP_ALIAS: CTRAP;
DTRAP: 'DTRAP';
DTRAP_ALIAS: DTRAP;
TRAPMOB: 'TRAPMOB';
TRAPMOB_ALIAS: TRAPMOB;
TMASS: 'TMASS';
TMASS_ALIAS: TMASS;
DRANGE: 'DRANGE';
DRANGE_ALIAS: 'DRAN';
ET: 'ET';
ET_ALIAS: ET;
FNMN: 'FNMN';
FNMN_ALIAS: FNMN;
FNMP: 'FNMP';
FNMP_ALIAS: FNMP;
FNBN: 'FNBN';
FNBN_ALIAS: FNBN;
FNBP: 'FNBP';
FNBP_ALIAS: FNBP;
VERROR: 'VERROR';
VERROR_ALIAS: 'VE';
FERROR: 'FERROR';
FERROR_ALIAS: 'FE';
CARRIER: 'CARRIER';
CARRIER_ALIAS: 'CA';
PHASE1: 'PHASE1';
PHASE1_ALIAS: PHASE1;
PHASE2: 'PHASE2';
PHASE2_ALIAS: PHASE2;
PHASE3: 'PHASE3';
PHASE3_ALIAS: PHASE3;
TIME: 'TIME';
TIME_ALIAS: 'TI';
STEP: 'STEP';
STEP_ALIAS: 'ST';
TRATE: 'TRATE';
TRATE_ALIAS: 'TR';
SKIP_STATEMENT: 'SKIP';
SKIP_ALIAS: SKIP_STATEMENT;
PSOR: 'PSOR';
PSOR_ALIAS: 'PS';
PCYCLE: 'PCYCLE';
PCYCLE_ALIAS: 'PC';
NEWTON: 'NEWTON';
NEWTON_ALIAS: 'NE';
FSOR: 'FSOR';
FSOR_ALIAS: 'FS';
FCYCLE: 'FCYCLE';
FCYCLE_ALIAS: 'FC';
ABORT: 'ABORT';
ABORT_ALIAS: ABORT;
METHOD: 'METHOD';
METHOD_ALIAS: 'METH';
POISSON: 'POISSON';
POISSON_ALIAS: 'POIS';
RANGECHECK: 'RANGECHECK';
RANGECHECK_ALIAS: 'RANGEC';
FPRINT: 'FPRINT';
FPRINT_ALIAS: 'FPRI';
NAME: 'NAME';
NAME_ALIAS: NAME;
VALUE: 'VALUE';
VALUE_ALIAS: VALUE;
FILE: 'FILE';
FILE_ALIAS: FILE;
CHARACTER: 'CHARACTER';
CHARACTER_ALIAS: 'CHAR';
OPTIMIZE: 'OPTIMIZE';
OPTIMIZE_ALIAS: OPTIMIZE;
TARGET: 'TARGET';
TARGET_ALIAS: 'TARG';
TYPE: 'TYPE';
TYPE_ALIAS: TYPE;
CHARGE: 'CHARGE';
CHARGE_ALIAS: 'CHA';
XMIN: 'XMIN';
XMIN_ALIAS: 'XMI';
YMIN: 'YMIN';
YMIN_ALIAS: 'YMI';
ZMIN: 'ZMIN';
ZMIN_ALIAS: 'ZMI';
XMAX: 'XMAX';
XMAX_ALIAS: 'XMA';
YMAX: 'YMAX';
YMAX_ALIAS: 'YMA';
ZMAX: 'ZMAX';
ZMAX_ALIAS: 'ZMA';
ELEMENT: 'ELEMENT';
ELEMENT_ALIAS: 'ELEM';
PROFILE: 'PROFILE';
PROFILE_ALIAS: 'PROF';
CMAX: 'CMAX';
CMAX_ALIAS: 'CMA';
CBACK: 'CBACK';
CBACK_ALIAS: 'CB';
XJ: 'XJ';
XJ_ALIAS: XJ;
RP: 'RP';
RP_ALIAS: RP;
LD: 'LD';
LD_ALIAS: LD;
THETA: 'THETA';
THETA_ALIAS: 'THE';
PHI: 'PHI';
PHI_ALIAS: PHI;
MULTIPLY: 'MULTIPLY';
MULTIPLY_ALIAS: 'MU';
PATTERN: 'PATTERN';
PATTERN_ALIAS: 'PAT';
GFILE: 'GFILE';
GFILE_ALIAS: GFILE;
XORIGIN: 'XORIGIN';
XORIGIN_ALIAS: 'XO';
YORIGIN: 'YORIGIN';
YORIGIN_ALIAS: 'YO';
AXIS: 'AXIS';
AXIS_ALIAS: AXIS;
MASK: 'MASK';
MASK_ALIAS: MASK;
ANDMASK: 'ANDMASK';
ANDMASK_ALIAS: 'ANDM';
ANDNEGA: 'ANDNEGA';
ANDNEGA_ALIAS: 'ANDN';
CRATE: 'CRATE';
CRATE_ALIAS: 'CRAT';
DETECT: 'DETECT';
DETECT_ALIAS: 'DETE';
APPEND: 'APPEND';
APPEND_ALIAS: 'APP';
TRIM: 'TRIM';
TRIM_ALIAS: TRIM;
XPLUS: 'XPLUS';
XPLUS_ALIAS: 'XPL';
YPLUS: 'YPLUS';
YPLUS_ALIAS: 'YPL';
ZPLUS: 'ZPLUS';
ZPLUS_ALIAS: 'ZPL';
XMULTIPLE: 'XMULTIPLE';
XMULTIPLE_ALIAS: 'XMUL';
YMULTIPLE: 'YMULTIPLE';
YMULTIPLE_ALIAS: 'YMUL';
ZMULTIPLE: 'ZMULTIPLE';
ZMULTIPLE_ALIAS: 'ZMUL';
XSHIFT: 'XSHIFT';
XSHIFT_ALIAS: 'XSH';
YSHIFT: 'YSHIFT';
YSHIFT_ALIAS: 'YSH';
ZSHIFT: 'ZSHIFT';
ZSHIFT_ALIAS: 'ZSH';
FXMULTIPLE: 'FXMULTIPLE';
FXMULTIPLE_ALIAS: 'FXMUL';
FYMULTIPLE: 'FYMULTIPLE';
FYMULTIPLE_ALIAS: 'FYMUL';
NEGATIVE: 'NEGATIVE';
NEGATIVE_ALIAS: 'NEGA';
XREPEAT: 'XREPEAT';
XREPEAT_ALIAS: 'XREP';
YREPEAT: 'YREPEAT';
YREPEAT_ALIAS: 'YREP';
LOCOS: 'LOCOS';
LOCOS_ALIAS: LOCOS;
MATERIAL: 'MATERIAL';
MATERIAL_ALIAS: 'MATE';
EXPAND: 'EXPAND';
EXPAND_ALIAS: 'EXP';
VOLTAGE: 'VOLTAGE';
VOLTAGE_ALIAS: 'V';
WORK: 'WORK';
WORK_ALIAS: 'WOR';
SUPREM4: 'SUPREM4';
SUPREM4_ALIAS: 'SU';
RESISTANCE: 'RESISTANCE';
RESISTANCE_ALIAS: 'RESI';
PARAMETER: 'PARAMETER';
PARAMETER_ALIAS: 'PARA';
OPTION: 'OPTION';
OPTION_ALIAS: 'OPT';
PEAK: 'PEAK';
PEAK_ALIAS: PEAK;
RADIUS: 'RADIUS';
RADIUS_ALIAS: 'RAD';
WIDTH: 'WIDTH';
WIDTH_ALIAS: 'WID';
COORDINATE: 'COORDINATE';
COORDINATE_ALIAS: 'COO';
DELIMITER: 'DELIMITER';
DELIMITER_ALIAS: 'DELI';
RATIO: 'RATIO';
RATIO_ALIAS: 'RA';
RATE: 'RATE';
RATE_ALIAS: RATIO_ALIAS;
SPACE: 'SPACE';
SPACE_ALIAS: 'SP';
TMIN: 'TMIN';
TMIN_ALIAS: 'TMI';
TMAX: 'TMAX';
TMAX_ALIAS: 'TMA';
TPLUS: 'TPLUS';
TPLUS_ALIAS: 'TPL';
QF: 'QF';
QF_ALIAS: QF;
SN: 'SN';
SN_ALIAS: SN;
SP_STATEMENT: SPACE_ALIAS;
SP_ALIAS: SP_STATEMENT;
LAMBDA: 'LAMBDA';
LAMBDA_ALIAS: 'LA';
POWER: 'POWER';
POWER_ALIAS: 'PO';
ABSORPTION: 'ABSORPTION';
ABSORPTION_ALIAS: 'ABS';
LMAX: 'LMAX';
LMAX_ALIAS: 'LMA';
REVERSE: 'REVERSE';
REVERSE_ALIAS: 'REV';
MIRROR: 'MIRROR';
MIRROR_ALIAS: 'MIR';
BACK: 'BACK';
BACK_ALIAS: BACK;
MOBILITY: 'MOBILITY';
MOBILITY_ALIAS: 'MOB';
BGNARROW: 'BGNARROW';
BGNARROW_ALIAS: 'BGN';
SRH: 'SRH';
SRH_ALIAS: SRH;
AUGER: 'AUGER';
AUGER_ALIAS: 'AUG';
IMPACT: 'IMPACT';
IMPACT_ALIAS: 'IMP';
TRAP: 'TRAP';
TRAP_ALIAS: TRAP;
TUNNELING: 'TUNNELING';
TUNNELING_ALIAS: 'TUN';
FNCURRENT: 'FNCURRENT';
FNCURRENT_ALIAS: 'FNC';
DV: 'DV';
DV_ALIAS: DV;
GR: 'GR';
GR_ALIAS: GR;
BEAK: 'BEAK';
BEAK_ALIAS: BEAK;
ZBEAK: 'ZBEAK';
ZBEAK_ALIAS: 'ZBE';
EDGE: 'EDGE';
EDGE_ALIAS: EDGE;
RN: 'RN';
RN_ALIAS: RN;
CURRENT: 'CURRENT';
CURRENT_ALIAS: 'CU';
NCURRENT: 'NCURRENT';
NCURRENT_ALIAS: 'NC';
PCURRENT: 'PCURRENT';
PCURRENT_ALIAS: PCYCLE_ALIAS;
SHAPE: 'SHAPE';
SHAPE_ALIAS: SHAPE;
NEW_FERMI: 'NEW_FERMI';
NEW_FERMI_ALIAS: NEW_FERMI;
ADD_IMPURITY: 'ADD_IMPURITY';
ADD_IMPURITY_ALIAS: 'ADD_IMP';
OLD_ELECTRODE: 'OLD_ELECTRODE';
OLD_ELECTRODE_ALIAS: 'OLD_ELE';
TSTEP: 'TSTEP';
TSTEP_ALIAS: TSTEP;
XBOUNDARY: 'XBOUNDARY';
XBOUNDARY_ALIAS: 'XB';
YBOUNDARY: 'YBOUNDARY';
YBOUNDARY_ALIAS: 'YB';
CELL: 'CELL';
CELL_ALIAS: CELL;
CONCENTRATION: 'CONCENTRATION';
CONCENTRATION_ALIAS: 'C';

UserParam: '@' ParamChars;

ParamSep: Whitespace | COMMA | Newline;

// comments
LineComment: CommentStartChar ~[\r\n]* -> channel (HIDDEN);

CommentStartChar: '#' | '$' | '*';

// title statement
TitleStatement: (TITLE | TITLE_ALIAS) ~[\r\n]*;

// parameter values
fragment DIGITS: [0-9]+;

Numeric: Integer | Decimal | Scientific;

Integer: '-'? DIGITS;

Decimal: Integer '.' DIGITS;

Scientific: '-'? DIGITS ('.' DIGITS)? [E] Integer;

StringLiteral: '"' .+? '"' | '\'' .+? '\'';

UserString: '$$' ParamChars;

KeywordParamValue: ParamChars;

NumericalFunctionBody: [A-Z0-9+\-*/^@()]+;

// WHITESPACE
Whitespace: [ \t]+ -> channel (HIDDEN);

Newline: '\r'? '\n' -> channel (HIDDEN);